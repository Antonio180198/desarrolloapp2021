@page "/AgregarCertificado"
@inject NavigationManager NavigationManager
@using segundoexamenparcial.Modelo;
@using segundoexamenparcial.Servicios;
@inject ServicioPeliculas serv;
@inject ServicioCertificadodP sins;

<h3>Agregar Actor</h3> 

 <div class="row">
    <div class="col-md-8">
    <EditForm Model="@obj" OnValidSubmit="@CrearCertificado">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="CertificadoID" class="control-label">Actor ID</label>
                <InputNumber id="CertificadoID" class="form-control" @bind-Value="obj.CertificadoId"/>
            </div>
              <div class="form-group">
                <label for="Descripcion" class="control-label">Descripcion</label>
                <InputText id="Descripcion" class="form-control" @bind-Value="obj.Descripcion"/>
            </div>
            
            <div class="form-group">
                <label for="TituloID" class="control-label">Peliculass </label>
                <InputSelect id="TituloID" class="form-control" @bind-Value="obj.TituloId">
                    @foreach (var i in @objins )
                    {
                        <option value="@i.TituloID">@i.titulo</option>
                    }
                    
                </InputSelect>
            </div>
            
            <button type="submit" class="btn btn-primary" >Guardar</button>
            <button type="button" class="btn btn-primary" @onclick="@Cancelar" >Cancelar</button>
    </EditForm> 
    </div>
 </div>
 
@code {
CertificadosdePeliculas obj = new CertificadosdePeliculas();
    List<Peliculass> objins;
    protected void CrearCertificado() {
        serv.Insertar(obj);
        NavigationManager.NavigateTo("CertificadosdePeliculas");
    }
    protected void Cancelar() {
       NavigationManager.NavigateTo("CertificadosdePeliculas");
    }
    protected override void OnInitialized() {
         objins = sins.ObtenerTodo("");
    }
}